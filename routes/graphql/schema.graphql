"A datetime string with format 'Y-m-d H:i:s', e.g. '2018-01-01 13:00:00'."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A date string with format 'Y-m-d', e.g. '2011-05-23'."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

type Query {
	users: [User!]! @paginate(type: "paginator" model: "App\\User")
	user(id: ID @eq): User @find(model: "App\\User")
	locations:[Location] @paginate(type: "paginator" model: "App\\Locations")
}

type Mutation {
	createUser(
		name: String @rules(apply: ["required"])
		email: String @rules(apply: ["required", "email", "unique:users,email"])
		password: String @rules(apply: ["required", "string", "between:8,12"])
	): User @create(model: "App\\User")
	updateUser(
		id: ID @rules(apply: ["required", "exists:users"])
		name: String
		email: String @rules(apply: ["email"])
	): User @update(model: "App\\User")
	deleteUser(
		id: ID @rules(apply: ["required"])
	): User @delete(model: "App\\User")
	createLocation(
		name: String @rules(apply: ["required", "string"])
		phone: String @rules(apply: ["required", "numeric", "digits_between:10,13"])
		website: String @rules(apply: ["url"])
		fk_user_id: Int @rules(apply: ["required", "numeric"])
		description: String @rules(apply: ["string"])
		
	): Location @create(model: "App\\Locations")
}


type User {
	id: ID!
	name: String!
	email: String!
	locations: [Location]
	created_at: DateTime!
	updated_at: DateTime!
}

type Location {
	id: ID!
	name: String!
	phone: String!
	website: String
	description: String
	fk_user_id: Int!
	user: User
	created_at: DateTime!
	updated_at: DateTime!
}